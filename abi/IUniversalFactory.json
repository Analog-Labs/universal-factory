{"abi":[{"type":"function","name":"context","inputs":[],"outputs":[{"name":"","type":"tuple","internalType":"struct Context","components":[{"name":"contractAddress","type":"address","internalType":"address"},{"name":"sender","type":"address","internalType":"address"},{"name":"callDepth","type":"uint8","internalType":"uint8"},{"name":"kind","type":"uint8","internalType":"enum CreateKind"},{"name":"hasCallback","type":"bool","internalType":"bool"},{"name":"callbackSelector","type":"bytes4","internalType":"bytes4"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"data","type":"bytes","internalType":"bytes"}]}],"stateMutability":"view"},{"type":"function","name":"create2","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"creationCode","type":"bytes","internalType":"bytes"},{"name":"arguments","type":"bytes","internalType":"bytes"},{"name":"callback","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"payable"},{"type":"function","name":"create2","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"creationCode","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"payable"},{"type":"function","name":"create2","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"creationCode","type":"bytes","internalType":"bytes"},{"name":"arguments","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"payable"},{"type":"function","name":"create3","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"creationCode","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"payable"},{"type":"function","name":"create3","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"creationCode","type":"bytes","internalType":"bytes"},{"name":"arguments","type":"bytes","internalType":"bytes"},{"name":"callback","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"payable"},{"type":"function","name":"create3","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"creationCode","type":"bytes","internalType":"bytes"},{"name":"arguments","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"payable"},{"type":"event","name":"ContractCreated","inputs":[{"name":"contractAddress","type":"address","indexed":true,"internalType":"address"},{"name":"creationCodeHash","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"salt","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"sender","type":"address","indexed":true,"internalType":"address"},{"name":"argumentsHash","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"codeHash","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"callbackHash","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"depth","type":"uint8","indexed":false,"internalType":"uint8"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":true},{"type":"error","name":"CallStackOverflow","inputs":[]},{"type":"error","name":"CallbackFailed","inputs":[{"name":"","type":"bytes","internalType":"bytes"}]},{"type":"error","name":"ContractAlreadyExists","inputs":[{"name":"","type":"address","internalType":"address"}]},{"type":"error","name":"Create2Failed","inputs":[]},{"type":"error","name":"Create3Failed","inputs":[]},{"type":"error","name":"ReservedInitCode","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"context()":"d0496d6a","create2(bytes32,bytes)":"b9aaf526","create2(bytes32,bytes,bytes)":"ce40d339","create2(bytes32,bytes,bytes,bytes)":"8778391e","create3(bytes32,bytes)":"2af25238","create3(bytes32,bytes,bytes)":"d2a8169a","create3(bytes32,bytes,bytes,bytes)":"ac049de2"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CallStackOverflow\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"CallbackFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ContractAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Create2Failed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Create3Failed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReservedInitCode\",\"type\":\"error\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"creationCodeHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"argumentsHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"codeHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"callbackHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"depth\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ContractCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"context\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"callDepth\",\"type\":\"uint8\"},{\"internalType\":\"enum CreateKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"hasCallback\",\"type\":\"bool\"},{\"internalType\":\"bytes4\",\"name\":\"callbackSelector\",\"type\":\"bytes4\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Context\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"creationCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"arguments\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callback\",\"type\":\"bytes\"}],\"name\":\"create2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"creationCode\",\"type\":\"bytes\"}],\"name\":\"create2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"creationCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"arguments\",\"type\":\"bytes\"}],\"name\":\"create2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"creationCode\",\"type\":\"bytes\"}],\"name\":\"create3\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"creationCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"arguments\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callback\",\"type\":\"bytes\"}],\"name\":\"create3\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"creationCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"arguments\",\"type\":\"bytes\"}],\"name\":\"create3\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The interface exposed by the Universal Factory Contract.\",\"errors\":{\"CallStackOverflow()\":[{\"details\":\"Maximum call stack of 127 exceeded. OBS: probably impossible to reach this limit, due EIP-150 `all but one 64th`.\"}],\"CallbackFailed(bytes)\":[{\"details\":\"The `callback` reverted, this error wraps the revert reason returned by the callback.\"}],\"ContractAlreadyExists(address)\":[{\"details\":\"The deterministic address already exists.\"}],\"Create2Failed()\":[{\"details\":\"The create2 `creationCode` reverted.\"}],\"Create3Failed()\":[{\"details\":\"The create3 `creationCode` reverted. obs: Called by `Create3Proxy` using `CREATE` OPCODE.\"}],\"ReservedInitCode()\":[{\"details\":\"The provided `initCode` is reserved for internal use only, try to use `create3` instead.\"}]},\"events\":{\"ContractCreated(address,bytes32,bytes32,address,bytes32,bytes32,bytes32,uint8,uint256)\":{\"details\":\"Emitted when a contract is succesfully created, this is the only event emitted by the universal factory.\"}},\"kind\":\"dev\",\"methods\":{\"context()\":{\"details\":\"Current call context, returns zero for all fields if there's no context. This function provides useful information that can be accessed inside the contract constructor. Examples: - `Context.contractAddress` the address of the contract being created. - `Context.sender` actual `msg.sender` who called the UniversalFactory. - `Context.data` to send arguments to the contract constructor without change the resulting address. - `Context.hasCallback` whether a callback was provided or not. - `Context.callbackSelector` first 4 bytes of the callback calldata (zero if no callback is provided). - `Context.callDepth` current call depth, incremented when nested contracts are created. - `Context.salt` the salt used to derive this contract address. - `Context.kind` whether `CREATE2` or `CREATE3` is used. - `Context.value` the value provided, this minimal value between `msg.value` and `address(this).balance` due EVM compatibility.\",\"returns\":{\"_0\":\"Context current call text, or zero for all values if there's no context.\"}},\"create2(bytes32,bytes)\":{\"details\":\"Creates an contract at a deterministic address, the final address is derived from the `salt` and `creationCode`, and is computed as follow: ```solidity return address(uint160(uint256(keccak256(abi.encodePacked(uint8(0xff), address(factory), uint256(salt), keccak256(creationCode)))))); ``` The contract constructor can access the actual sender and other information by calling `context()`.\",\"params\":{\"creationCode\":\"Creation code (constructor) of the contract to be deployed, this value affect the resulting address.\",\"salt\":\"Salt of the contract creation, this value affect the resulting address.\"},\"returns\":{\"_0\":\"address of the created contract.\"}},\"create2(bytes32,bytes,bytes)\":{\"details\":\"Same as `create2(uint256,bytes)`, but also includes `arguments` which will be available at `context.data`.\",\"params\":{\"arguments\":\"data that will be available at `Context.data`, this field doesn't affect the resulting address.\",\"creationCode\":\"Creation code (constructor) of the contract to be deployed, this value affect the resulting address.\",\"salt\":\"Salt of the contract creation, this value affect the resulting address.\"},\"returns\":{\"_0\":\"address of the created contract.\"}},\"create2(bytes32,bytes,bytes,bytes)\":{\"details\":\"Same as `create2(uint256,bytes,bytes)`, but also includes a callback used to call the contract after it is created.\",\"params\":{\"arguments\":\"data that will be available at `Context.data`, this field doesn't affect the resulting address.\",\"callback\":\"callback called after create the contract, this field doesn't affect the resulting address.\",\"creationCode\":\"Creation code (constructor) of the contract to be deployed, this value affect the resulting address.\",\"salt\":\"Salt of the contract creation, this value affect the resulting address.\"},\"returns\":{\"_0\":\"address of the created contract.\"}},\"create3(bytes32,bytes)\":{\"params\":{\"creationCode\":\"Creation code (constructor) of the contract to be deployed, this value doesn't affect the resulting address.\",\"salt\":\"Salt of the contract creation, resulting address will be derivated from this value only.\"},\"returns\":{\"_0\":\"address of the created contract.\"}},\"create3(bytes32,bytes,bytes)\":{\"details\":\"Same as `create3(uint256,bytes)`, but also includes `arguments` which will be available at `context.data`.\",\"params\":{\"arguments\":\"data that will be available at `Context.data`, this field doesn't affect the resulting address.\",\"creationCode\":\"Creation code (constructor) of the contract to be deployed, this value doesn't affect the resulting address.\",\"salt\":\"Salt of the contract creation, this value affect the resulting address.\"},\"returns\":{\"_0\":\"address of the created contract.\"}},\"create3(bytes32,bytes,bytes,bytes)\":{\"details\":\"Same as `create3(uint256,bytes,bytes)`, but also includes a callback used to call the contract after it is created.\",\"params\":{\"arguments\":\"data that will be available at `Context.data`, this field doesn't affect the resulting address.\",\"callback\":\"callback called after create the contract, this field doesn't affect the resulting address.\",\"creationCode\":\"Creation code (constructor) of the contract to be deployed, this value doesn't affect the resulting address.\",\"salt\":\"Salt of the contract creation, this value affect the resulting address.\"},\"returns\":{\"_0\":\"address of the created contract.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"create2(bytes32,bytes,bytes,bytes)\":{\"notice\":\"The `context.hasCallback` is always set to `true`, this method ALWAYS calls the callback, even if it is empty. IMPORTANT 1: Throws an `CallbackFailed` error if the callback reverts. IMPORTANT 2: Funds sent to this method will be forwarded to the `callback`, not the contract constructor.\"},\"create3(bytes32,bytes)\":{\"notice\":\"Creates an contract at a deterministic address, the final address is derived exclusively from the `salt` field: ```solidity salt = keccak256(abi.encodePacked(msg.sender, salt)); bytes32 proxyHash = 0x0281a97663cf81306691f0800b13a91c4d335e1d772539f127389adae654ffc6; address proxy = address(uint160(uint256(keccak256(abi.encodePacked(uint8(0xff), address(factory), uint256(salt), proxyHash))))); return address(uint160(uint256(keccak256(abi.encodePacked(uint16(0xd694), proxy, uint8(1)))))); ``` The contract constructor can access the actual sender and other informations by calling `context()`.\"},\"create3(bytes32,bytes,bytes,bytes)\":{\"notice\":\"The `context.hasCallback` is always set to `true`, this method ALWAYS calls the callback, even if it is empty. IMPORTANT 1: Throws an `CallbackFailed` error if the callback reverts. IMPORTANT 2: Funds sent to this method will be forwarded to the `callback`, not the contract constructor.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/UniversalFactory.sol\":\"IUniversalFactory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":false,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200000},\"remappings\":[\":@universal-factory/=src/\",\":forge-std/=lib/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"src/UniversalFactory.sol\":{\"keccak256\":\"0x26954c47fdd3219c7baaf52f647c02643bd11a5285e675973f58439b7229b73a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://139bdc4f38974886f427509997cf3e8b719e380c0245bf7883a0a616faf074b6\",\"dweb:/ipfs/QmZVUfytYFzRzQwxynBrwCWPpAPXxHLaRkpZz7oLN91nuD\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"CallStackOverflow"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"type":"error","name":"CallbackFailed"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"type":"error","name":"ContractAlreadyExists"},{"inputs":[],"type":"error","name":"Create2Failed"},{"inputs":[],"type":"error","name":"Create3Failed"},{"inputs":[],"type":"error","name":"ReservedInitCode"},{"inputs":[{"internalType":"address","name":"contractAddress","type":"address","indexed":true},{"internalType":"bytes32","name":"creationCodeHash","type":"bytes32","indexed":true},{"internalType":"bytes32","name":"salt","type":"bytes32","indexed":true},{"internalType":"address","name":"sender","type":"address","indexed":true},{"internalType":"bytes32","name":"argumentsHash","type":"bytes32","indexed":false},{"internalType":"bytes32","name":"codeHash","type":"bytes32","indexed":false},{"internalType":"bytes32","name":"callbackHash","type":"bytes32","indexed":false},{"internalType":"uint8","name":"depth","type":"uint8","indexed":false},{"internalType":"uint256","name":"value","type":"uint256","indexed":false}],"type":"event","name":"ContractCreated","anonymous":true},{"inputs":[],"stateMutability":"view","type":"function","name":"context","outputs":[{"internalType":"struct Context","name":"","type":"tuple","components":[{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint8","name":"callDepth","type":"uint8"},{"internalType":"enum CreateKind","name":"kind","type":"uint8"},{"internalType":"bool","name":"hasCallback","type":"bool"},{"internalType":"bytes4","name":"callbackSelector","type":"bytes4"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes","name":"data","type":"bytes"}]}]},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes","name":"creationCode","type":"bytes"},{"internalType":"bytes","name":"arguments","type":"bytes"},{"internalType":"bytes","name":"callback","type":"bytes"}],"stateMutability":"payable","type":"function","name":"create2","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes","name":"creationCode","type":"bytes"}],"stateMutability":"payable","type":"function","name":"create2","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes","name":"creationCode","type":"bytes"},{"internalType":"bytes","name":"arguments","type":"bytes"}],"stateMutability":"payable","type":"function","name":"create2","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes","name":"creationCode","type":"bytes"}],"stateMutability":"payable","type":"function","name":"create3","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes","name":"creationCode","type":"bytes"},{"internalType":"bytes","name":"arguments","type":"bytes"},{"internalType":"bytes","name":"callback","type":"bytes"}],"stateMutability":"payable","type":"function","name":"create3","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes","name":"creationCode","type":"bytes"},{"internalType":"bytes","name":"arguments","type":"bytes"}],"stateMutability":"payable","type":"function","name":"create3","outputs":[{"internalType":"address","name":"","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"context()":{"details":"Current call context, returns zero for all fields if there's no context. This function provides useful information that can be accessed inside the contract constructor. Examples: - `Context.contractAddress` the address of the contract being created. - `Context.sender` actual `msg.sender` who called the UniversalFactory. - `Context.data` to send arguments to the contract constructor without change the resulting address. - `Context.hasCallback` whether a callback was provided or not. - `Context.callbackSelector` first 4 bytes of the callback calldata (zero if no callback is provided). - `Context.callDepth` current call depth, incremented when nested contracts are created. - `Context.salt` the salt used to derive this contract address. - `Context.kind` whether `CREATE2` or `CREATE3` is used. - `Context.value` the value provided, this minimal value between `msg.value` and `address(this).balance` due EVM compatibility.","returns":{"_0":"Context current call text, or zero for all values if there's no context."}},"create2(bytes32,bytes)":{"details":"Creates an contract at a deterministic address, the final address is derived from the `salt` and `creationCode`, and is computed as follow: ```solidity return address(uint160(uint256(keccak256(abi.encodePacked(uint8(0xff), address(factory), uint256(salt), keccak256(creationCode)))))); ``` The contract constructor can access the actual sender and other information by calling `context()`.","params":{"creationCode":"Creation code (constructor) of the contract to be deployed, this value affect the resulting address.","salt":"Salt of the contract creation, this value affect the resulting address."},"returns":{"_0":"address of the created contract."}},"create2(bytes32,bytes,bytes)":{"details":"Same as `create2(uint256,bytes)`, but also includes `arguments` which will be available at `context.data`.","params":{"arguments":"data that will be available at `Context.data`, this field doesn't affect the resulting address.","creationCode":"Creation code (constructor) of the contract to be deployed, this value affect the resulting address.","salt":"Salt of the contract creation, this value affect the resulting address."},"returns":{"_0":"address of the created contract."}},"create2(bytes32,bytes,bytes,bytes)":{"details":"Same as `create2(uint256,bytes,bytes)`, but also includes a callback used to call the contract after it is created.","params":{"arguments":"data that will be available at `Context.data`, this field doesn't affect the resulting address.","callback":"callback called after create the contract, this field doesn't affect the resulting address.","creationCode":"Creation code (constructor) of the contract to be deployed, this value affect the resulting address.","salt":"Salt of the contract creation, this value affect the resulting address."},"returns":{"_0":"address of the created contract."}},"create3(bytes32,bytes)":{"params":{"creationCode":"Creation code (constructor) of the contract to be deployed, this value doesn't affect the resulting address.","salt":"Salt of the contract creation, resulting address will be derivated from this value only."},"returns":{"_0":"address of the created contract."}},"create3(bytes32,bytes,bytes)":{"details":"Same as `create3(uint256,bytes)`, but also includes `arguments` which will be available at `context.data`.","params":{"arguments":"data that will be available at `Context.data`, this field doesn't affect the resulting address.","creationCode":"Creation code (constructor) of the contract to be deployed, this value doesn't affect the resulting address.","salt":"Salt of the contract creation, this value affect the resulting address."},"returns":{"_0":"address of the created contract."}},"create3(bytes32,bytes,bytes,bytes)":{"details":"Same as `create3(uint256,bytes,bytes)`, but also includes a callback used to call the contract after it is created.","params":{"arguments":"data that will be available at `Context.data`, this field doesn't affect the resulting address.","callback":"callback called after create the contract, this field doesn't affect the resulting address.","creationCode":"Creation code (constructor) of the contract to be deployed, this value doesn't affect the resulting address.","salt":"Salt of the contract creation, this value affect the resulting address."},"returns":{"_0":"address of the created contract."}}},"version":1},"userdoc":{"kind":"user","methods":{"create2(bytes32,bytes,bytes,bytes)":{"notice":"The `context.hasCallback` is always set to `true`, this method ALWAYS calls the callback, even if it is empty. IMPORTANT 1: Throws an `CallbackFailed` error if the callback reverts. IMPORTANT 2: Funds sent to this method will be forwarded to the `callback`, not the contract constructor."},"create3(bytes32,bytes)":{"notice":"Creates an contract at a deterministic address, the final address is derived exclusively from the `salt` field: ```solidity salt = keccak256(abi.encodePacked(msg.sender, salt)); bytes32 proxyHash = 0x0281a97663cf81306691f0800b13a91c4d335e1d772539f127389adae654ffc6; address proxy = address(uint160(uint256(keccak256(abi.encodePacked(uint8(0xff), address(factory), uint256(salt), proxyHash))))); return address(uint160(uint256(keccak256(abi.encodePacked(uint16(0xd694), proxy, uint8(1)))))); ``` The contract constructor can access the actual sender and other informations by calling `context()`."},"create3(bytes32,bytes,bytes,bytes)":{"notice":"The `context.hasCallback` is always set to `true`, this method ALWAYS calls the callback, even if it is empty. IMPORTANT 1: Throws an `CallbackFailed` error if the callback reverts. IMPORTANT 2: Funds sent to this method will be forwarded to the `callback`, not the contract constructor."}},"version":1}},"settings":{"remappings":["@universal-factory/=src/","forge-std/=lib/forge-std/src/"],"optimizer":{"runs":200000,"details":{"peephole":true,"inliner":true,"jumpdestRemover":true,"orderLiterals":true,"deduplicate":false,"cse":true,"constantOptimizer":true,"yul":true,"yulDetails":{"stackAllocation":true,"optimizerSteps":"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO"},"simpleCounterForLoopUncheckedIncrement":true}},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/UniversalFactory.sol":"IUniversalFactory"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"src/UniversalFactory.sol":{"keccak256":"0x26954c47fdd3219c7baaf52f647c02643bd11a5285e675973f58439b7229b73a","urls":["bzz-raw://139bdc4f38974886f427509997cf3e8b719e380c0245bf7883a0a616faf074b6","dweb:/ipfs/QmZVUfytYFzRzQwxynBrwCWPpAPXxHLaRkpZz7oLN91nuD"],"license":"MIT"}},"version":1},"id":26}